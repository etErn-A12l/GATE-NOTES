{"assets":[{"title":"Next.js Server-side Authentication GET Request","id":"12fbb5ed-794b-4389-96aa-53aa66a7445f","type":"CODE","raw":"import { NextRequest, NextResponse } from 'next/server';\nimport { serverAuth } from '../../../../lib/serverAuth';\n\nexport async function GET(req: NextRequest) {\n  const user = await serverAuth(req);\n\n  if (!user) {\n    return NextResponse.json({ error: 'Not authenticated' }, { status: 401 });\n  }\n\n  return NextResponse.json(user);\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:46:11.099Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"27f6d829-7f70-48ea-8981-d76e4919535a","created":{"value":"2024-08-14T03:47:13.392Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:47:13.392Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"12fbb5ed-794b-4389-96aa-53aa66a7445f"},"type":"DESCRIPTION","text":"A Next.js server-side function for handling GET requests with authentication using serverAuth.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"61852963-9921-4fc8-8bbc-0bb7ed4f31fc","created":{"value":"2024-08-14T03:46:11.099Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:11.099Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"12fbb5ed-794b-4389-96aa-53aa66a7445f"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f8c2790a-2248-4690-a276-8686f5c61483","created":{"value":"2024-08-14T03:46:11.099Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:11.099Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"12fbb5ed-794b-4389-96aa-53aa66a7445f"},"type":"DESCRIPTION","text":"This code snippet is a middleware function that handles the GET request. It uses the NextRequest and NextResponse libraries to handle authentication requests, returning an error message if user is not authenticated or invalid for this API call.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:49:01.391Z"},{"title":"Server-side React Component with Authentication","id":"5cfd933c-13b3-4bb1-843d-d8d08aef9a17","type":"CODE","raw":"import { serverAuth } from '../lib/serverAuth';\n\nexport default async function ServerComponent() {\n  const user = await serverAuth();\n\n  if (!user) {\n    return <div>Please log in</div>;\n  }\n\n  return <div>Welcome, {user.name}</div>;\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:46:06.946Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7e53dfc2-969c-4916-b2d9-7e741a5ae06e","created":{"value":"2024-08-14T03:46:06.946Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:06.946Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"5cfd933c-13b3-4bb1-843d-d8d08aef9a17"},"type":"DESCRIPTION","text":"This code snippet exports a component called ServerComponent that uses the serverAuth library to authenticate and render an email address. If there is no user, it displays \"Please log in\" if they are not authenticated or returns \"\".","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a5e941bb-ec6e-4a9d-99d2-04bc8a8636ba","created":{"value":"2024-08-14T03:47:05.982Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:47:05.982Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"5cfd933c-13b3-4bb1-843d-d8d08aef9a17"},"type":"DESCRIPTION","text":"A server-side React component that handles authentication before rendering user-specific content.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ac5a1197-7e26-461f-9d2e-e647a64fef4f","created":{"value":"2024-08-14T03:46:06.946Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:06.946Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"5cfd933c-13b3-4bb1-843d-d8d08aef9a17"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:47:06.071Z"},{"title":"Client Dashboard with Authentication and Logout","id":"d58715c6-29e5-4372-8470-a48680fe48b5","type":"CODE","raw":"'use client'\n\nimport { useAuth } from '../hooks/useAuth';\n\nexport default function Dashboard() {\n  const { user, loading, logout } = useAuth();\n\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <div>Please log in</div>;\n\n  return (\n    <div>\n      <h1>Welcome, {user.name}</h1>\n      <button onClick={logout}>Logout</button>\n    </div>\n  );\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:46:02.415Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"0678bf78-7f67-41b5-8d83-afdcf3957da3","created":{"value":"2024-08-14T03:46:02.415Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:02.415Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"d58715c6-29e5-4372-8470-a48680fe48b5"},"type":"DESCRIPTION","text":"This code snippet exports a React component called Dashboard that renders a welcome message with the user's name, loading and logout buttons. It also includes hooks to handle authentication errors if there are no users provided in an auth module or not. The login button is displayed","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"963c88f5-0a05-4702-a216-7bde7165db1e","created":{"value":"2024-08-14T03:46:59.914Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:59.914Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"d58715c6-29e5-4372-8470-a48680fe48b5"},"type":"DESCRIPTION","text":"A client-side dashboard component that handles user authentication and logout functionality.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"cec0e5fd-8071-4f3f-a9c1-c36ac923c456","created":{"value":"2024-08-14T03:46:02.415Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:02.415Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"d58715c6-29e5-4372-8470-a48680fe48b5"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:46:59.995Z"},{"title":"Server-side JWT Authentication with Next.js","id":"d7d82f03-937c-4ae4-813e-6558b1848a90","type":"CODE","raw":"import { getJwtFromCookie, decrypt } from './auth';\nimport { NextRequest, NextResponse } from 'next/server';\n\nexport async function serverAuth(req: NextRequest) {\n  const token = await getJwtFromCookie();\n  \n  if (!token) {\n    return null;\n  }\n\n  try {\n    const payload = await decrypt(token);\n    return payload;\n  } catch (error) {\n    return null;\n  }\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:57.223Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b162d09c-b693-439f-b26d-2bf3c3ef767b","created":{"value":"2024-08-14T03:45:57.223Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:57.223Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"d7d82f03-937c-4ae4-813e-6558b1848a90"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b5914377-f775-4550-b639-59a0e66e129b","created":{"value":"2024-08-14T03:45:57.223Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:57.223Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"d7d82f03-937c-4ae4-813e-6558b1848a90"},"type":"DESCRIPTION","text":"This code snippet defines a middleware function called \"serverAuth\" that takes in a request object and returns the payload. It uses JwtFromCookie, decrypts it from cookie using NextRequest to encrypt an authentication token with decrypted","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"c98f9c62-e9eb-4ec4-aeff-4438508ba3ab","created":{"value":"2024-08-14T03:46:53.290Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:53.290Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"d7d82f03-937c-4ae4-813e-6558b1848a90"},"type":"DESCRIPTION","text":"A function for server-side JWT authentication using Next.js framework.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:53.360Z"},{"title":"React Custom Hook for User Authentication","id":"15b4cbd6-23a2-47b7-8514-c319d8adc297","type":"CODE","raw":"import { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\n\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    async function loadUserFromCookie() {\n      const response = await fetch('/api/auth/user');\n      if (response.ok) {\n        const user = await response.json();\n        setUser(user);\n      }\n      setLoading(false);\n    }\n    loadUserFromCookie();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password }),\n    });\n\n    if (response.ok) {\n      const user = await response.json();\n      setUser(user);\n      router.push('/dashboard');\n    } else {\n      // Handle login error\n    }\n  };\n\n  const logout = async () => {\n    await fetch('/api/auth/logout', { method: 'POST' });\n    setUser(null);\n    router.push('/login');\n  };\n\n  return { user, loading, login, logout };\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:50.906Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"492d1de0-c300-4ac0-8a12-9e3169a57e2d","created":{"value":"2024-08-14T03:46:46.980Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:46.980Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"15b4cbd6-23a2-47b7-8514-c319d8adc297"},"type":"DESCRIPTION","text":"A custom React hook for user authentication with login and logout functionality.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"96835111-6195-437a-be7f-a6ed88b646a2","created":{"value":"2024-08-14T03:45:50.906Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:50.906Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"15b4cbd6-23a2-47b7-8514-c319d8adc297"},"type":"DESCRIPTION","text":"This code snippet defines a React hook called useAuth that fetches user information from the API. It uses state and hooks to handle authentication, login or logout requests for users using HTTP/POST request handlers with their email and password","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b504ea35-ae79-4b3b-b270-d0178821bc29","created":{"value":"2024-08-14T03:45:50.906Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:50.906Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"15b4cbd6-23a2-47b7-8514-c319d8adc297"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:46:47.070Z"},{"title":"JWT Encryption and Token Manipulation Functions for Next.js","id":"98e01e65-a689-461a-bc58-f456c977b99a","type":"CODE","raw":"import { SignJWT, jwtVerify } from 'jose';\nimport { cookies } from 'next/headers';\n\nconst secretKey = process.env.JWT_SECRET_KEY;\nconst key = new TextEncoder().encode(secretKey);\n\nexport async function encrypt(payload: any) {\n  return await new SignJWT(payload)\n    .setProtectedHeader({ alg: 'HS256' })\n    .setIssuedAt()\n    .setExpirationTime('1h')\n    .sign(key);\n}\n\nexport async function decrypt(token: string) {\n  const { payload } = await jwtVerify(token, key, {\n    algorithms: ['HS256'],\n  });\n  return payload;\n}\n\nexport async function getJwtFromCookie() {\n  const cookieStore = cookies();\n  const token = cookieStore.get('token');\n  return token ? token.value : null;\n}\n\nexport async function setJwtCookie(token: string) {\n  cookies().set('token', token, { httpOnly: true, secure: process.env.NODE_ENV === 'production' });\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:46.523Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3ae311f2-121a-450d-b7ae-9b6ffa9a3cfe","created":{"value":"2024-08-14T03:46:39.913Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:39.913Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"98e01e65-a689-461a-bc58-f456c977b99a"},"type":"DESCRIPTION","text":"Functions for encrypting and decrypting JWT tokens, getting and setting JWT from cookies in a Next.js environment.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"9723f0cd-a941-418f-a585-7811dc0fd611","created":{"value":"2024-08-14T03:45:46.523Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:46.523Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"98e01e65-a689-461a-bc58-f456c977b99a"},"type":"DESCRIPTION","text":"This code snippet exports functions for encrypting and decrypting a JWT token using the SignJWT library. It also includes methods to verify, decrypt or set an cookie with specific values from cookies in production environment.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ccb712eb-77f8-4049-a0c5-0fe261274929","created":{"value":"2024-08-14T03:45:46.523Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:46.523Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"98e01e65-a689-461a-bc58-f456c977b99a"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:46:40.002Z"},{"title":"Client Dashboard with Authentication","id":"554dafb6-361e-4310-b847-58fe323b6c60","type":"CODE","raw":"'use client'\n\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function Dashboard() {\n  const { user, loading, logout } = useAuth();\n\n  if (loading) return <div>Loading...</div>;\n  if (!user) return <div>Please log in</div>;\n\n  return (\n    <div>\n      <h1>Welcome, {user.name}</h1>\n      <button onClick={logout}>Logout</button>\n    </div>\n  );\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:42.799Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"10ff07c7-8272-451f-8ae1-ea0023492be3","created":{"value":"2024-08-14T03:45:42.799Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:42.799Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"554dafb6-361e-4310-b847-58fe323b6c60"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4ad08031-e284-495f-aa81-5910e31ba042","created":{"value":"2024-08-14T03:45:42.799Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:42.799Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"554dafb6-361e-4310-b847-58fe323b6c60"},"type":"DESCRIPTION","text":"This code snippet exports a React component called Dashboard that renders a welcome message with the user's name, loading and logout buttons. It also includes an authentication context to access their data from AuthContext or useAuth for authenticating it","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"4db76aed-3e78-40ac-9e02-3e6c519e5c35","created":{"value":"2024-08-14T03:46:32.884Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:32.884Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"554dafb6-361e-4310-b847-58fe323b6c60"},"type":"DESCRIPTION","text":"A client-side dashboard component that handles user authentication and logout functionality.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:32.977Z"},{"title":"React Root Layout with AuthProvider Context","id":"ff381411-cb23-4395-8e85-574ed8ffb457","type":"CODE","raw":"// app/layout.tsx\nimport { AuthProvider } from '../contexts/AuthContext';\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:38.985Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"837fb5bf-1f93-49ee-aff8-cdefdb87d360","created":{"value":"2024-08-14T03:45:38.985Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:38.985Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"ff381411-cb23-4395-8e85-574ed8ffb457"},"type":"DESCRIPTION","text":"This code snippet defines a React component called RootLayout that renders an HTML page with authentication providers. It uses the AuthContext library to access the children of the root layout and displays it as \"AuthProvider\". The parent view is then rendered in","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b85fcde8-255f-4ebd-b507-118a4c9a07d3","created":{"value":"2024-08-14T03:45:38.985Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:38.985Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"ff381411-cb23-4395-8e85-574ed8ffb457"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"edc43241-3e40-49c0-a04b-97e3c3ce04e4","created":{"value":"2024-08-14T03:46:25.970Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:25.970Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"ff381411-cb23-4395-8e85-574ed8ffb457"},"type":"DESCRIPTION","text":"A React component for the root layout of an application with AuthProvider context.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:26.323Z"},{"title":"React Authentication Context Provider with User Management","id":"be12e04d-0552-4184-ad01-6779e37f2a75","type":"CODE","raw":"// contexts/AuthContext.tsx\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { useRouter } from 'next/navigation';\n\ninterface AuthContextType {\n  user: any;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const router = useRouter();\n\n  useEffect(() => {\n    async function loadUserFromCookie() {\n      try {\n        const response = await fetch('/api/auth/user');\n        if (response.ok) {\n          const user = await response.json();\n          setUser(user);\n        }\n      } catch (error) {\n        console.error('Failed to load user', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUserFromCookie();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (response.ok) {\n        const user = await response.json();\n        setUser(user);\n        router.push('/dashboard');\n      } else {\n        throw new Error('Login failed');\n      }\n    } catch (error) {\n      console.error('Login error', error);\n      // Handle login error (e.g., show error message to user)\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await fetch('/api/auth/logout', { method: 'POST' });\n      setUser(null);\n      router.push('/login');\n    } catch (error) {\n      console.error('Logout error', error);\n      // Handle logout error\n    }\n  };\n\n  const value = { user, loading, login, logout };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:33.674Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"1573c1c3-4111-43dd-a54a-02177ec236cd","created":{"value":"2024-08-14T03:46:19.383Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:19.383Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"be12e04d-0552-4184-ad01-6779e37f2a75"},"type":"DESCRIPTION","text":"This code snippet provides an authentication context provider in React for user management, including login and logout functions.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"a84c3ae8-a5cf-46ae-a150-f36239d55ed3","created":{"value":"2024-08-14T03:45:33.674Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:33.674Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"be12e04d-0552-4184-ad01-6779e37f2a75"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b2bb2798-55b0-4f4c-a6ba-b48b6dfd295d","created":{"value":"2024-08-14T03:45:33.674Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:33.674Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"be12e04d-0552-4184-ad01-6779e37f2a75"},"type":"DESCRIPTION","text":"This code snippet is a React component that fetches user information from the API, and handles login or logout requests. It also includes middleware to load data based on their email and password in an array of JSON objects using useState and useEffect hooks for loading","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:19.494Z"},{"title":"React AuthProvider for User Authentication","id":"a6f99237-41df-4eba-a1a2-882b40751ede","type":"CODE","raw":"// contexts/AuthContext.tsx\n// ... (previous imports)\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  // ... (previous state declarations)\n\n  useEffect(() => {\n    async function loadUserFromServer() {\n      try {\n        const response = await fetch('/api/auth/user');\n        if (response.ok) {\n          const user = await response.json();\n          setUser(user);\n        }\n      } catch (error) {\n        console.error('Failed to load user', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUserFromServer();\n  }, []);\n\n  // ... (rest of the AuthProvider implementation)\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:29.182Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"3b8f4922-ae21-4cb4-bacb-0084a16a6d19","created":{"value":"2024-08-14T03:45:29.182Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:29.182Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"a6f99237-41df-4eba-a1a2-882b40751ede"},"type":"DESCRIPTION","text":"This code snippet defines a React component called AuthProvider. It uses the useEffect hook to fetch user data from an API endpoint and stores it in \"user\" variable, which is then set as loading when successful. The rest of the","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"675e89e9-8ffb-4d7e-82d5-e36fd30ace22","created":{"value":"2024-08-14T03:45:29.182Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:29.182Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"a6f99237-41df-4eba-a1a2-882b40751ede"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"6d52b80f-d91d-4d0e-a65c-0bbdd93d7d23","created":{"value":"2024-08-14T03:46:09.411Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:46:09.411Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"a6f99237-41df-4eba-a1a2-882b40751ede"},"type":"DESCRIPTION","text":"Implementation of an AuthProvider in React for user authentication using fetch to load user data.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:11.088Z"},{"title":"Logout Route for Next.js Authentication","id":"b0471719-9924-4cd8-8167-e00ed7d61db1","type":"CODE","raw":"// app/api/auth/logout/route.ts\nimport { NextResponse } from 'next/server';\n\nexport async function POST() {\n  const response = NextResponse.json({ message: 'Logged out successfully' });\n  response.cookies.set('auth-token', '', {\n    httpOnly: true,\n    expires: new Date(0)\n  });\n\n  return response;\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:25.504Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"304fd8dd-5988-417d-82bf-4b57a5432129","created":{"value":"2024-08-14T03:45:25.504Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:25.504Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"b0471719-9924-4cd8-8167-e00ed7d61db1"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7d1f3ddc-01c0-40a3-a6e2-5c09f4b72905","created":{"value":"2024-08-14T03:45:57.799Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:57.799Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"b0471719-9924-4cd8-8167-e00ed7d61db1"},"type":"DESCRIPTION","text":"A TypeScript function for handling logout requests in a Next.js authentication system.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"adacdef3-c275-4de8-b3ff-5ffbbd4d66f0","created":{"value":"2024-08-14T03:45:25.504Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:25.504Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"b0471719-9924-4cd8-8167-e00ed7d61db1"},"type":"DESCRIPTION","text":"This code snippet is a middleware function that sends an HTTP POST request to the next/server. It sets up authentication token and cookies for this response, including httpOnly or expiration time of 0 seconds in milliseconds","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:46:01.463Z"},{"title":"JWT Authentication for Login Route in Next.js","id":"224b96d0-b422-4488-9623-4e8749022fcd","type":"CODE","raw":"// app/api/auth/login/route.ts\nimport { NextResponse } from 'next/server';\nimport jwt from 'jsonwebtoken';\n\nexport async function POST(request: Request) {\n  const { email, password } = await request.json();\n\n  // Validate credentials (implement your own logic here)\n  if (isValidCredentials(email, password)) {\n    const user = { id: '123', name: 'John Doe', email };\n    const token = jwt.sign(user, process.env.JWT_SECRET!);\n\n    const response = NextResponse.json({ message: 'Login successful' });\n    response.cookies.set('auth-token', token, {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'strict',\n      maxAge: 3600 // 1 hour\n    });\n\n    return response;\n  }\n\n  return NextResponse.json({ message: 'Invalid credentials' }, { status: 401 });\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:21.357Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"2b5361e0-8c60-4940-a263-3bab19f3a708","created":{"value":"2024-08-14T03:45:21.357Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:21.357Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"224b96d0-b422-4488-9623-4e8749022fcd"},"type":"DESCRIPTION","text":"This code snippet is an asynchronous function that handles a POST request. It checks if the email and password are valid, signs it using JWT to verify its credentials by signing them with their ID of '123', name","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"2f95658e-8868-4324-97c7-1734813b7f5f","created":{"value":"2024-08-14T03:45:50.085Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:50.085Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"224b96d0-b422-4488-9623-4e8749022fcd"},"type":"DESCRIPTION","text":"Implementing JWT authentication for login route in Next.js using custom logic for credential validation.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"80a447d3-685a-4829-8def-704d27ad7dab","created":{"value":"2024-08-14T03:45:21.357Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:21.357Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"224b96d0-b422-4488-9623-4e8749022fcd"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:45:50.891Z"},{"title":"Profile Page with Authentication in React","id":"cfd1a461-fea3-40b9-b6e5-5fc328e5c512","type":"CODE","raw":"// app/profile/page.tsx\nimport { getServerSession } from '../../lib/auth';\n\nexport default async function ProfilePage() {\n  const session = await getServerSession();\n\n  if (!session) {\n    return <div>Please log in to view this page</div>;\n  }\n\n  return (\n    <div>\n      <h1>Welcome, {session.name}</h1>\n      <p>Your email: {session.email}</p>\n    </div>\n  );\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:17.350Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"183ace1e-2360-42dc-a605-04beef5804e9","created":{"value":"2024-08-14T03:45:17.350Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:17.350Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"cfd1a461-fea3-40b9-b6e5-5fc328e5c512"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"c74e279a-a91f-45c6-baa9-4fe174f2e1e0","created":{"value":"2024-08-14T03:45:40.521Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:40.521Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"cfd1a461-fea3-40b9-b6e5-5fc328e5c512"},"type":"DESCRIPTION","text":"A React component for displaying a user's profile with authentication check using server session.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"e5c825db-91ba-4171-bc38-ebb837bd5f13","created":{"value":"2024-08-14T03:45:17.350Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:17.350Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"cfd1a461-fea3-40b9-b6e5-5fc328e5c512"},"type":"DESCRIPTION","text":"This code snippet exports a function called ProfilePage that renders a welcome message with the username and email. It uses the getServerSession library to obtain an instance of the session, checks if it is not already logged in or returns something like \"Please log in\".","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-08-14T03:45:42.765Z"},{"title":"Server Session Authentication with JWT in Next.js","id":"f96d9607-47e7-49d9-a728-af41c065fd18","type":"CODE","raw":"// lib/auth.ts\nimport { cookies } from 'next/headers';\nimport jwt from 'jsonwebtoken';\n\nexport async function getServerSession() {\n  const cookieStore = cookies();\n  const token = cookieStore.get('auth-token');\n\n  if (!token) {\n    return null;\n  }\n\n  try {\n    // Verify and decode the JWT\n    const decoded = jwt.verify(token.value, process.env.JWT_SECRET!);\n    return decoded;\n  } catch (error) {\n    console.error('Failed to decode token', error);\n    return null;\n  }\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:13.294Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"35630b90-04d0-4c7c-a7cd-d64f542bcb82","created":{"value":"2024-08-14T03:45:13.294Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:13.294Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"f96d9607-47e7-49d9-a728-af41c065fd18"},"type":"DESCRIPTION","text":"This code snippet is a function that returns the server session by checking if an authentication token exists and decoding it. If successful, it decodes its value using JSONWebToken to verify or decode their JWT secret in your environment variable.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"7da16b5c-d73c-47f5-b6a7-31d8609da810","created":{"value":"2024-08-14T03:45:32.032Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:32.032Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"f96d9607-47e7-49d9-a728-af41c065fd18"},"type":"DESCRIPTION","text":"A TypeScript function for handling server-side authentication using JWT in a Next.js application.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"d6037acd-a910-43af-90f6-be524f9b012f","created":{"value":"2024-08-14T03:45:13.294Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:13.294Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"f96d9607-47e7-49d9-a728-af41c065fd18"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:45:33.634Z"},{"title":"Next.js Middleware for Authentication","id":"90338f51-ba92-4f88-8ac7-ee55c882ffbf","type":"CODE","raw":"// middleware.ts\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\nimport { getServerSession } from './lib/auth' // Assuming you have this utility function\n\nexport async function middleware(request: NextRequest) {\n  const session = await getServerSession()\n\n  // Get the pathname of the request (e.g. /, /protected, /api/user)\n  const path = request.nextUrl.pathname\n\n  // If the user is not authenticated and trying to access any route other than '/'\n  if (!session && path !== '/') {\n    return NextResponse.redirect(new URL('/', request.url))\n  }\n\n  // If the user is authenticated and trying to access the '/' route\n  if (session && path === '/') {\n    return NextResponse.redirect(new URL('/dashboard', request.url))\n  }\n\n  // For all other cases, continue with the request\n  return NextResponse.next()\n}\n\n// Specify which routes should be processed by this middleware\nexport const config = {\n  matcher: ['/((?!api|_next/static|_next/image|favicon.ico).*)'],\n}","language":"ts","time":"24 hours ago","created":"2024-08-14T03:45:06.500Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ae8c0a3a-767b-4449-9be6-db93f047afb7","created":{"value":"2024-08-14T03:45:21.824Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:21.824Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"90338f51-ba92-4f88-8ac7-ee55c882ffbf"},"type":"DESCRIPTION","text":"A TypeScript middleware function for authentication in Next.js, redirecting users based on their session status.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"b20325da-0634-45d4-a219-0615d316f643","created":{"value":"2024-08-14T03:45:06.500Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:06.500Z","readable":"24 hours ago"},"mechanism":"AUTOMATIC","asset":{"id":"90338f51-ba92-4f88-8ac7-ee55c882ffbf"},"type":"DESCRIPTION","text":"This code snippet defines a middleware function that handles incoming requests. It checks if the user is authenticated and redirects it to /dashboard, or for all other cases in case of an HTTP request with different routes (api|_next/static|_next/image","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"eb180037-e924-4692-8cc2-2d4c7a2f7e77","created":{"value":"2024-08-14T03:45:06.500Z","readable":"24 hours ago"},"updated":{"value":"2024-08-14T03:45:06.500Z","readable":"24 hours ago"},"mechanism":"MANUAL","asset":{"id":"90338f51-ba92-4f88-8ac7-ee55c882ffbf"},"type":"COMMENT","text":"Code snippet from a conversation with Pieces for Developers Copilot"}],"updated":"2024-08-14T03:45:24.837Z"},{"title":"Python Dockerfile for Installing Requirements and Running App","id":"d9550e70-428c-4f0c-b7ec-aa8e2ae9859d","type":"CODE","raw":"FROM python:3.8-slim-buster\n\nWORKDIR /app\n\nCOPY requirements.txt requirements.txt\nRUN pip install -r requirements.txt\n\nCOPY . .\n\nCMD [\"python\", \"app.py\"]","language":"bat","time":"15 days ago","created":"2024-07-31T04:27:39.562Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"02b203f1-fe08-403c-b74c-cbe3720b93ce","created":{"value":"2024-07-31T04:27:49.483Z","readable":"15 days ago"},"updated":{"value":"2024-07-31T04:27:49.483Z","readable":"15 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"d9550e70-428c-4f0c-b7ec-aa8e2ae9859d"},"type":"DESCRIPTION","text":"A Dockerfile that sets up a Python environment, installs requirements, and runs an app.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"ff8f8adc-7ab1-43ab-9b61-199a3d83fbf2","created":{"value":"2024-07-31T04:27:40.457Z","readable":"15 days ago"},"updated":{"value":"2024-07-31T04:27:40.457Z","readable":"15 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"d9550e70-428c-4f0c-b7ec-aa8e2ae9859d"},"type":"DESCRIPTION","text":"This code snippet installs the \"app.py\" command from a Python file called \"requirements.txt\". It then sets up an executable and runs it to run pip installing its dependencies, using commands for python-slim-buster","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-07-31T04:27:49.528Z"},{"title":"Basic Express Web Server with Route","id":"907c51b3-e430-4f88-bf35-d1a2c409dbdd","type":"CODE","raw":"import express from 'express';\nconst app = express();\nconst PORT = 3000;\n\napp.get('/', (req, res) => {\n  res.send('Hello World!');\n});\n\napp.listen(PORT, () => {\n  console.log(`Server running on http://localhost:${PORT}`);\n});","language":"ts","time":"15 days ago","created":"2024-07-31T04:27:36.185Z","annotations":[{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"8aa77b5f-de9b-4f90-8a04-1d9a92e8ba05","created":{"value":"2024-07-31T04:27:36.966Z","readable":"15 days ago"},"updated":{"value":"2024-07-31T04:27:36.966Z","readable":"15 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"907c51b3-e430-4f88-bf35-d1a2c409dbdd"},"type":"DESCRIPTION","text":"This code sets up an Express server that listens on port 3000 and sends a message \"Hello World!\" when the root URL is located.","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}},{"schema":{"migration":0,"semantic":"MAJOR_0_MINOR_0_PATCH_1"},"id":"f90a1cfa-8975-4e1c-abeb-e542b3c999af","created":{"value":"2024-07-31T04:27:44.231Z","readable":"15 days ago"},"updated":{"value":"2024-07-31T04:27:44.231Z","readable":"15 days ago"},"mechanism":"AUTOMATIC","asset":{"id":"907c51b3-e430-4f88-bf35-d1a2c409dbdd"},"type":"DESCRIPTION","text":"A simple web server using Express framework to handle a GET request and respond with 'Hello World!'","model":{"id":"59b105e1-6d1b-47a6-a95b-5c46820506ac"}}],"updated":"2024-07-31T04:27:44.328Z"}],"gptContexts":[],"gptFolderNames":[],"enrichedCode":{},"migration":1,"remoteCopilotState":""}